//- Все примеси в этом файле должны начинаться c имени блока (filter)
//- Упоминание имени блока в классах обязательно, без этого он не попадёт
//- в сборку

mixin filter(text, mods)

  //- Принимает:
  //-   text    {string} - текст
  //-   mods    {string} - список модификаторов
  //- Вызов:
        +filter('Текст', 'some-mod')

  -
    // список модификаторов
    var allMods = '';
    if(typeof(mods) !== 'undefined' && mods) {
      var modsList = mods.split(',');
      for (var i = 0; i < modsList.length; i++) {
        allMods = allMods + ' filter--' + modsList[i].trim();
      }
    }

  .filter.js-filter-menu(class=allMods)&attributes(attributes)
    .filter__inner.js-filter-menu-body
      block
      .filter__container.filter__container--page
        span.filter__title Per page:
        .filter__items
          each menu, key in data.filters.perPage
            if key === 0
              button.filter__btn.filter__btn-page.filter__btn--active.js-per-page-btn
                span.filter__btn-amount.filter__btn-page-amount= menu
            else
              button.filter__btn.filter__btn-page.js-per-page-btn
                span.filter__btn-amount.filter__btn-page-amount= menu

      .filter__container.filter__container--type.js-type-filter-container
        each menu, key in data.filters.perType
          if key === 0
            button.filter__btn.filter__btn-type.filter__btn--active.js-type-btn
              svg.filter__btn-icon
                use(href= src.icon + 'type-' + menu.icon)
              span.filter__btn-value= menu.name
              span.filter__btn-amount= menu.amount
          else
            button.filter__btn.filter__btn-type.js-type-btn
              svg.filter__btn-icon
                use(href= src.icon + 'type-' + menu.icon)
              span.filter__btn-value= menu.name
              span.filter__btn-amount= menu.amount
